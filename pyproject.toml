[project]
name = "tts-agents"
version = "1.0.0"
description = "Professional Text-to-Speech Agents with OpenAI TTS-1 - Production-ready AI voice synthesis"
authors = [
    { name = "Muhammad Bilal Khan", email = "muhammadbilalkhan@ai.com" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["text-to-speech", "tts", "openai", "ai", "voice", "speech", "audio", "synthesis"]
dependencies = [
    "openai>=1.12.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.6.0",
    "typing-extensions>=4.9.0",
    "aiofiles>=23.0.0",
    "asyncio-throttle>=1.0.2",
    "rich>=13.0.0",
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]

[project.urls]
Homepage = "https://github.com/muhammadbilalkhan/tts-agents"
Repository = "https://github.com/muhammadbilalkhan/tts-agents"
Documentation = "https://github.com/muhammadbilalkhan/tts-agents#readme"
"Bug Tracker" = "https://github.com/muhammadbilalkhan/tts-agents/issues"

[project.scripts]
tts-agents = "tts_agents.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/tts_agents"]

[tool.hatch.build]
include = [
    "src/tts_agents/**/*.py",
    "src/tts_agents/**/*.json",
    "src/tts_agents/**/*.yaml",
    "src/tts_agents/**/*.yml",
]

[tool.hatch.build.targets.sdist]
include = [
    "src/tts_agents/**/*.py",
    "src/tts_agents/**/*.json",
    "src/tts_agents/**/*.yaml",
    "src/tts_agents/**/*.yml",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
line-length = 100
target-version = "py39"
select = ["E", "F", "I", "N", "W", "B", "UP", "PL", "RUF", "C4", "PIE", "T20", "SIM", "TCH"]

[tool.ruff.isort]
known-first-party = ["tts_agents"]

[tool.ruff.per-file-ignores]
"tests/**/*" = ["S101", "PLR2004"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src/tts_agents --cov-report=term-missing --cov-report=html"
asyncio_mode = "auto"

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
